import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

const permissions = [
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
  {
    name: 'users.read',
    category: 'Users',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
  },
  {
    name: 'users.create',
    category: 'Users',
    description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
  },
  {
    name: 'users.update',
    category: 'Users',
    description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
  },
  {
    name: 'users.delete',
    category: 'Users',
    description: '–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
  },
  {
    name: 'users.approve',
    category: 'Users',
    description: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
  },

  // –†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞
  {
    name: 'roles.read',
    category: 'Roles',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–æ–ª–µ–π',
  },
  {
    name: 'roles.create',
    category: 'Roles',
    description: '–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π',
  },
  {
    name: 'roles.update',
    category: 'Roles',
    description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–µ–π',
  },
  {
    name: 'roles.delete',
    category: 'Roles',
    description: '–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π',
  },
  {
    name: 'roles.assign',
    category: 'Roles',
    description: '–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º',
  },
  {
    name: 'permissions.read',
    category: 'Roles',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞',
  },

  // –¢–æ–≤–∞—Ä—ã
  {
    name: 'products.read',
    category: 'Products',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤',
  },
  {
    name: 'products.create',
    category: 'Products',
    description: '–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤',
  },
  {
    name: 'products.update',
    category: 'Products',
    description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤',
  },
  {
    name: 'products.delete',
    category: 'Products',
    description: '–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤',
  },

  // –ü—Ä–æ–¥–∞–∂–∏
  {
    name: 'sales.read',
    category: 'Sales',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–¥–∞–∂',
  },
  {
    name: 'sales.create',
    category: 'Sales',
    description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥–∞–∂',
  },
  {
    name: 'sales.update',
    category: 'Sales',
    description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–∞–∂',
  },
  {
    name: 'sales.delete',
    category: 'Sales',
    description: '–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂',
  },
  {
    name: 'sales.reports',
    category: 'Sales',
    description: '–û—Ç—á–µ—Ç—ã –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
  },

  // –ö–ª–∏–µ–Ω—Ç—ã
  {
    name: 'customers.read',
    category: 'Customers',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–ª–∏–µ–Ω—Ç–æ–≤',
  },
  {
    name: 'customers.create',
    category: 'Customers',
    description: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤',
  },
  {
    name: 'customers.update',
    category: 'Customers',
    description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤',
  },
  {
    name: 'customers.delete',
    category: 'Customers',
    description: '–£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤',
  },

  // –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã
  {
    name: 'counterparties.read',
    category: 'Counterparties',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤',
  },
  {
    name: 'counterparties.create',
    category: 'Counterparties',
    description: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤',
  },
  {
    name: 'counterparties.update',
    category: 'Counterparties',
    description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤',
  },
  {
    name: 'counterparties.delete',
    category: 'Counterparties',
    description: '–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤',
  },

  // –ë–æ–Ω—É—Å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  {
    name: 'bonus-transactions.read',
    category: 'Bonus',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –±–æ–Ω—É—Å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π',
  },
  {
    name: 'bonus-transactions.create',
    category: 'Bonus',
    description: '–°–æ–∑–¥–∞–Ω–∏–µ –±–æ–Ω—É—Å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π',
  },
  {
    name: 'bonus-transactions.update',
    category: 'Bonus',
    description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ–Ω—É—Å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π',
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
  {
    name: 'settings.read',
    category: 'Settings',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫',
  },
  {
    name: 'settings.update',
    category: 'Settings',
    description: '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫',
  },
  {
    name: 'system.admin',
    category: 'Settings',
    description: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ',
  },

  // –û—Ç—á–µ—Ç—ã
  {
    name: 'reports.sales',
    category: 'Reports',
    description: '–û—Ç—á–µ—Ç—ã –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
  },
  {
    name: 'reports.products',
    category: 'Reports',
    description: '–û—Ç—á–µ—Ç—ã –ø–æ —Ç–æ–≤–∞—Ä–∞–º',
  },
  {
    name: 'reports.customers',
    category: 'Reports',
    description: '–û—Ç—á–µ—Ç—ã –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º',
  },
  {
    name: 'reports.financial',
    category: 'Reports',
    description: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã',
  },
];

const roles = [
  {
    name: 'Super Admin',
    description: '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã',
    isSystem: true,
    permissions: permissions.map(p => p.name), // –í—Å–µ –ø—Ä–∞–≤–∞
  },
  {
    name: 'Admin',
    description: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å –ø—Ä–∞–≤–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Å–∏—Å—Ç–µ–º–æ–π',
    isSystem: true,
    permissions: [
      'users.read', 'users.create', 'users.update', 'users.approve',
      'roles.read', 'roles.create', 'roles.update', 'roles.assign',
      'permissions.read',
      'products.read', 'products.create', 'products.update', 'products.delete',
      'sales.read', 'sales.reports',
      'customers.read', 'customers.create', 'customers.update',
      'settings.read', 'settings.update',
      'reports.sales', 'reports.products', 'reports.customers', 'reports.financial',
    ],
  },
  {
    name: 'Manager',
    description: '–ú–µ–Ω–µ–¥–∂–µ—Ä —Å –ø—Ä–∞–≤–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∞–º–∏ –∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏',
    isSystem: false,
    permissions: [
      'products.read', 'products.create', 'products.update',
      'sales.read', 'sales.create', 'sales.update', 'sales.reports',
      'customers.read', 'customers.create', 'customers.update',
      'counterparties.read', 'counterparties.create', 'counterparties.update',
      'bonus-transactions.read', 'bonus-transactions.create',
      'reports.sales', 'reports.products', 'reports.customers',
    ],
  },
  {
    name: 'Cashier',
    description: '–ö–∞—Å—Å–∏—Ä —Å –ø—Ä–∞–≤–∞–º–∏ –ø—Ä–æ–¥–∞–∂ –∏ —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏',
    isSystem: false,
    permissions: [
      'products.read',
      'sales.read', 'sales.create',
      'customers.read', 'customers.create', 'customers.update',
      'bonus-transactions.read', 'bonus-transactions.create',
    ],
  },
];

async function seedPermissions() {
  console.log('üå± –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...');

  // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
  for (const permission of permissions) {
    await prisma.permission.upsert({
      where: { name: permission.name },
      update: {
        category: permission.category,
        description: permission.description,
      },
      create: permission,
    });
  }

  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${permissions.length} –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞`);

  // –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏
  for (const roleData of roles) {
    const { permissions: rolePermissions, ...role } = roleData;

    const existingRole = await prisma.role.findUnique({
      where: { name: role.name },
    });

    if (existingRole) {
      console.log(`‚ö†Ô∏è  –†–æ–ª—å "${role.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
      continue;
    }

    // –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–∞–≤ –¥–ª—è —Ä–æ–ª–∏
    const permissionRecords = await prisma.permission.findMany({
      where: {
        name: {
          in: rolePermissions,
        },
      },
    });

    // –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å —Å –ø—Ä–∞–≤–∞–º–∏
    await prisma.role.create({
      data: {
        ...role,
        permissions: {
          create: permissionRecords.map(permission => ({
            permission: {
              connect: { id: permission.id },
            },
          })),
        },
      },
    });

    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å "${role.name}" —Å ${permissionRecords.length} –ø—Ä–∞–≤–∞–º–∏`);
  }

  console.log('üéâ Seeding –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∏ —Ä–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω!');
}

async function main() {
  try {
    await seedPermissions();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ seeding:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

if (require.main === module) {
  main();
}

export { seedPermissions }; 